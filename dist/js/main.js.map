{"version":3,"sources":["main.js"],"names":["console","log","resultsWindow","document","querySelector","picSearch_button","picSearch_query","tagsSearch_button","tagsSearch_query","flickr_windows","SRCH_API_URL_BASE","INFO_API_URL_BASE","IMGurl_API_URL_BASE","createPhotoBox","infoResponse","photoDeck","data","photo","title","_content","photoLat","location","latitude","photoLon","longitude","sizeID","id","urlDeck","urls","url","urlID","i","length","resultPane","createElement","className","resultImg","photoContent","innerText","appendChild","getPhotoSizes","pullURLS","infoImage","photoSizes","sizes","img_lgSq","size","find","label","imgSrc","source","urlSrc","imgWindow","setAttribute","querySelectorAll","w","windowDiv","includes","getPhotoInfo","photoID","axios","get","params","photo_id","then","catch","error","handleQueryResponse","response","photoReturn","photos","getQueryData","photoQuery","tagsQuery","text","tags","makeSearchRequest","event","preventDefault","value","addEventListener","map","markers","infowindow","initMap","circus","lat","lng","google","maps","Map","getElementById","center","zoom","content","InfoWindow","marker","Marker","position","showContentInWindow","newContent","setContent","open","addListener","window"],"mappings":"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","sourcesContent":["\n//get photo id data from FLICKRs search.photo api\n  //set method to input flickr_params:/user_query and to only return images with geo data:true\n// loop through data and store photo ids in an array [photoIDs]\n// get geo data using photoIDs photo.getLocatoin api\n// loop through data and set each as a marker with content window on google map's api \n\n\n/*pull data to get ids, title, lon/lat. assign ids per div.\nuse ids to get photo urls\n\nfor each object in returned data, loop through and pull the id, title, lat/lon, and url. \nsend your id and get your photo. use url to match divs.\n\nget put on the page\n */\n\n\nconsole.log(\"hello, chello. GoogleFlickr1.0\");\n//0. define global function variables\nconst resultsWindow = document.querySelector(\".resultsWindow\");\nconst picSearch_button = document.querySelector(\"[name='picSearch_button']\");\nconst picSearch_query = document.querySelector(\"[name='SearchInputField']\");\nconst tagsSearch_button = document.querySelector(\"[name='tagsSearch_button']\");\nconst tagsSearch_query = document.querySelector(\"[name='tagsSearchInputField']\");\nlet flickr_windows;\n\n;(function(){\n    //1. wrapped inside this function, define global function variables\n    console.log ('flicker function booted...');\n    //** the url containg info FLICKR needs to return requested data. User text is fed thru using template literals: ${var}. url stored in a var. */\n    const SRCH_API_URL_BASE= 'https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=47fa016833c10c7cf777062f48eb2908&tags=${tagsQuery}&text=${photoQuery}&max_upload_date=1567857600&has_geo=1&extras=geo&format=json&nojsoncallback=1';\n\n    const INFO_API_URL_BASE= 'https://www.flickr.com/services/rest/?method=flickr.photos.getInfo&api_key=47fa016833c10c7cf777062f48eb2908&photo_id=${photoID}&format=json&nojsoncallback=1';\n    \n    const IMGurl_API_URL_BASE = 'https://www.flickr.com/services/rest/?method=flickr.photos.getSizes&api_key=47fa016833c10c7cf777062f48eb2908&photo_id=${photoID}&format=json&nojsoncallback=1';\n\n\n    //6b. Pull content from neat objects such as id title, lat, lon/ etc\n    function createPhotoBox(infoResponse){ \n     console.log(\"loading photo info...\" )\n     //store object properties in values\n     let photoDeck = infoResponse.data.photo.title._content;\n     let photoLat = infoResponse.data.photo.location.latitude;\n     let photoLon = infoResponse.data.photo.location.longitude;\n     let sizeID =  infoResponse.data.photo.id;\n     let urlDeck = infoResponse.data.photo.urls.url;\n     let urlID;\n     for(var i= 0; i < urlDeck.length; i++){\n      urlID = urlDeck[i]._content;\n     };\n\n\n     //create div to hold all content\n      let resultPane = document.createElement('div');\n      resultPane.className = \"flickr_result\";\n      //create div to hold photo (loaded 2ms later)\n      let resultImg = document.createElement('div');\n      resultImg.className = \"flickr_window\";\n      resultImg.id = urlID; //sets class as id for matching purposes \n      //create container for text\n      let photoContent = document.createElement('p');\n      photoContent.className = \"flickr_content\";\n      //place content in container\n      photoContent.innerText = photoDeck;\n      photoContent.innerText += \" \" + urlID;\n      //add containers to div\n      resultPane.appendChild(resultImg);\n      resultPane.appendChild(photoContent);\n      //add div to page\n      resultsWindow.appendChild(resultPane);\n\n      getPhotoSizes(sizeID);\n    };\n    \n    //7b. Pull urls containing sizes and jpgs. Selects 150x150/ \n    function pullURLS(infoImage){\n      let photoSizes = infoImage.data.sizes;\n      //console.log(\"photoSize of: \" +)\n      console.log(photoSizes) //select size by label name\n      let img_lgSq = photoSizes.size.find( ({ label }) => label === 'Large Square' );\n      let imgSrc = img_lgSq.source; //set src=\" {in variable}\"\n      let urlSrc = img_lgSq.url; // set url in variable to match against \n      //^^ GET VARIABLES //\n\n      //vv CREATE ELEMENTS //\n      let imgWindow = document.createElement(\"img\"); //create img element\n      imgWindow.setAttribute(\"src\", imgSrc) //set src as variable\n      imgWindow.id = urlSrc; //add shared classname (sets url as id);\n\n      // console.log(\"src url:\");\n       console.log(urlSrc);\n\n      //vv FIND DOM ELEMENT //\n       flickr_windows = document.querySelectorAll(\".flickr_window\");\n        //collect divs in array, loop thru each div, get the id\n      for (let w = 0; w < flickr_windows.length; w++) {\n        const windowDiv= flickr_windows[w].id;\n        if (urlSrc.includes(windowDiv)) {\n          console.log(\"match found\");\n          console.log(windowDiv, urlSrc);\n          flickr_windows[w].appendChild(imgWindow);\n        }\n      }\n    };\n    \n    //6a. call API again, now sending photoIDs to flickr\n    function getPhotoInfo(photoID){ \n      // CALL 1: GETS USER INFO ON PHOTOS IN NEATER OBJECTS\n      console.log(\"fetching photo info...\");\n      axios.get(INFO_API_URL_BASE,{ //call the link\n        params:{\n          photo_id: photoID // pass thru your varibales to Flickr's parameters\n        }\n      }).then(function(infoResponse){ //then call this function\n        console.log(infoResponse);\n        createPhotoBox(infoResponse)\n      }).catch(function (error){ //if get function failed, call this function \n       console.log(\"infoResponse isn't working...\");\n       console.log(error); //show error code in the console\n      });\n    }\n    \n    //7a.  all API again, now reqesuting imgs\n    function getPhotoSizes(sizeID) {\n      ///CALL 2: GETS PHOTO SRC IN VARIOUS SIZES AS JPGS\n\n      console.log(\"fetching photo sizes...\");\n      axios.get(IMGurl_API_URL_BASE,{ //call the link\n        params:{\n          photo_id: sizeID // pass thru your varibales to Flickr's parameters\n        }\n      }).then(function(infoImage){ //then call this function\n      console.log(infoImage);\n      pullURLS(infoImage)\n      //setTimeout(pullURLS(infoImage),2000); //(wait 2ms) pass the data to the next function;\n        //so photos load just a hair after thier div containers \n      }).catch(function (error){ //if get function failed, call this function \n      console.log(\"infoImage isn't working...\");\n      console.log(error); //show error code in the console\n      });\n    }\n    \n  \n    //5. process the photo ID data recieved from FLICKr\n    function handleQueryResponse(response){\n      console.log(\"processing data...\");\n      //target the array from the data you want to loop through\n     let photoReturn = response.data.photos.photo;\n      //loop through the array of data\n      for (var i=0; i < photoReturn.length; i++){\n        //store specific data in variables\n        let photoID = photoReturn[i].id;\n        //call next function, passing through new array\n        getPhotoInfo(photoID);\n      }\n    };\n\n\n    //4. call FLICKRs.photo.search and pass user values along as Flickrs params\n    function getQueryData(photoQuery, tagsQuery){\n      console.log(\"fetching with GET:\" + photoQuery ,tagsQuery);\n      axios.get(SRCH_API_URL_BASE,{ //call the link\n        params:{\n          text: photoQuery, // pass thru your varibales to Flickr's parameters\n          tags: tagsQuery\n        }\n      }).then(function(response){ //then call this function\n        console.log(\"data retrieved for \" + photoQuery + \" with tags: \" + tagsQuery );\n        console.log(response); //show returned call data in the console\n        handleQueryResponse(response); //pass the data to the next function;\n      }).catch(function (error){ //if get function failed, call this function \n        console.log(\"photo search isn't working...\");\n        console.log(error); //show error code in the console\n      }); //an addtional .then(function(var)) is always executed (optional)\n\n    };\n\n    //3.when button is clicked, run function \n    function makeSearchRequest(event){ //capture user value/calls getUserData()\n      //presents the browser from doing default behavior like refreshing/loading/ etc\n      event.preventDefault()\n      //turn user text into variable\n      const photoQuery = picSearch_query.value;\n      const tagsQuery = tagsSearch_query.value;\n      console.log('value of photo query: ', photoQuery);\n      console.log('value of photo query: ', tagsQuery);\n      //pass variables to next function\n      getQueryData(photoQuery,tagsQuery);\n      //function still works if one value is not entered.\n    };\n\n    //2. When user clickes the button, run this function (capture user values )\n    picSearch_button.addEventListener(\"click\", makeSearchRequest); //when user clicks button,\n    tagsSearch_button.addEventListener(\"click\", makeSearchRequest);// run this function\n\n    ////-----------GOOGLE MAPS---------------- GOOGLE MAPS------------------GOOGLE MAPS-----////\n\n    var map;\n    //var service;\n    var markers = [];\n    var infowindow = null;\n\n\n  function initMap() {\n\n    console.log(\"init map is here\")\n\n    var circus = {lat:33.813245, lng: -84.362171};\n    map = new google.maps.Map(document.getElementById('map'), {\n      center: circus,\n      zoom: 12\n    });\n   //makes places API a variable \n   \n    var content =\"something about this marker\"\n    infowindow= new google.maps.InfoWindow({\n      content: content\n\n    });\n    \n    //marker uses parameters and must include map: map to load the mapAPI \n    var marker = new google.maps.Marker({position: circus, map: map});\n\n    function showContentInWindow(newContent){\n            //variable is placed in new content window\n        infowindow.setContent(newContent)\n            //content is set above the indicated marker\n        infowindow.open(map, marker);\n    }\n    \n    marker.addListener(\"click\", function (){\n      //content is passed through the function \n      showContentInWindow(\"this is new content\");\n      console.log(\"clicky\");\n    });\n};\n  window.initMap = initMap;\n})();"],"file":"main.js"}