{"version":3,"sources":["main.js"],"names":["console","log","resultsWindow","document","querySelector","picSearch_button","picSearch_query","tagsSearch_button","tagsSearch_query","flickr_windows","imgThumbnails","markerLoad","mapMarkers","map","infowindow","SRCH_API_URL_BASE","INFO_API_URL_BASE","IMGurl_API_URL_BASE","clearOverlays","i","length","setMap","placeMarker","inputLat","inputLng","inputTitle","inputOwner","thumb","content","google","maps","InfoWindow","newLatLng","LatLng","marker","Marker","position","push","addListener","setContent","open","displayPhotoResults","urlID","photoTitle","photoDesc","photoLoc","photoOwner","sizeID","resultPane","createElement","className","resultImg","id","photoContent","contentTitle","contentDesc","contentLoc","contentOwner","textLabelA","textLabelB","textLabelC","innerHTML","appendChild","getPhotoSizes","pullPhotoData","infoResponse","data","photo","title","_content","description","owner","username","location","photoLat","latitude","photoLng","longitude","urlDeck","urls","url","pullURLS","infoImage","photoSizes","sizes","img_lgSq","size","find","label","imgSrc","source","urlSrc","imgWindow","setAttribute","querySelectorAll","w","windowDiv","includes","getPhotoInfo","photoID","axios","get","params","photo_id","then","catch","error","handleQueryResponse","response","photoReturn","photos","getQueryData","photoQuery","tagsQuery","text","tags","makeSearchRequest","event","preventDefault","value","addEventListener","initMap","circus","lat","lng","Map","getElementById","center","zoom","window"],"mappings":"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","sourcesContent":["\n//get photo id data from FLICKRs search.photo api\n  //set method to input flickr_params:/user_query and to only return images with geo data:true\n// loop through data and store photo ids in an array [photoIDs]\n// get geo data using photoIDs photo.getLocatoin api\n// loop through data and set each as a marker with content window on google map's api \n\n\n/* store the info in an object\nstore the objects in an array\nwhen (Flickr photo search) button is clicked:\n\ncreate marker:\nloop through array and for each object\ncreate marker using its lat, lon, title\nplace marker on map*/\n\n\n/*pull data to get ids, title, lon/lat. assign ids per div.\nuse ids to get photo urls\n\nfor each object in returned data, loop through and pull the id, title, lat/lon, and url. \nsend your id and get your photo. use url to match divs.\n\nget put on the page\n */\n\n\nconsole.log(\"hello, chello. GoogleFlickr1.0\");\n//0. define global function variables\nconst resultsWindow = document.querySelector(\".resultsWindow\");\nconst picSearch_button = document.querySelector(\"[name='picSearch_button']\");\nconst picSearch_query = document.querySelector(\"[name='SearchInputField']\");\nconst tagsSearch_button = document.querySelector(\"[name='tagsSearch_button']\");\nconst tagsSearch_query = document.querySelector(\"[name='tagsSearchInputField']\");\nlet flickr_windows; //appends images to page \nlet imgThumbnails= [];// array for collecting photo png srcs \nlet markerLoad = []; //array for when marker data is created\nvar mapMarkers; // array where markers are stored \nvar map; // calls goole map !!important\nvar infowindow = null;\n;(function(){\n  //1. wrapped inside this function, define global function variables\n  console.log ('flicker function booted...');\n  //** the url containg info FLICKR needs to return requested data. User text is fed thru using template literals: ${var}. url stored in a var. */\n  const SRCH_API_URL_BASE= 'https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=47fa016833c10c7cf777062f48eb2908&tags=${tagsQuery}&text=${photoQuery}&max_upload_date=1567857600&has_geo=1&extras=geo&format=json&nojsoncallback=1';\n\n  const INFO_API_URL_BASE= 'https://www.flickr.com/services/rest/?method=flickr.photos.getInfo&api_key=47fa016833c10c7cf777062f48eb2908&photo_id=${photoID}&format=json&nojsoncallback=1';\n  \n  const IMGurl_API_URL_BASE = 'https://www.flickr.com/services/rest/?method=flickr.photos.getSizes&api_key=47fa016833c10c7cf777062f48eb2908&photo_id=${photoID}&format=json&nojsoncallback=1';\n\n  ////-----------FLICKR---------------- FLICKR------------------FLICKR-----////\n\n\n  //10. clears any markers from the map\n  function clearOverlays() {      \n    //function to clear the markers from the arrays, deleting them from the map\n    for (var i = 0; i < mapMarkers.length; i++ ) {\n        mapMarkers[i].setMap(null);\n    }\n    mapMarkers.length = 0;\n}\n\n  \n  //9. pass in coordinates to marker creator\n  function placeMarker(inputLat, inputLng, inputTitle,inputOwner) {\n   console.log(\"creating marker...\")\n\n   //console.log(imgThumbnails);\n    var thumb = \" \";\n    var i;\n    for (i = 0; i < imgThumbnails.length; i++) {\n      thumb = imgThumbnails[i];\n      console.log(thumb)\n    }\n  \n    //pass through again to function that handles setting up content \n    \n    \n    var content = \"<div> <a href=\" + thumb + \"></a>\"    \n    +  \"<p>\" +  inputTitle \n    +  \"</p><p>Photo by : \" + inputOwner \n    + \"</p></div>\";\n    var infowindow = new google.maps.InfoWindow({\n    content: content\n    });\n\n    var newLatLng = new google.maps.LatLng(inputLat, inputLng);\n    var marker = new google.maps.Marker({\n      position: newLatLng, \n      map: map\n    }); console.log(\"adding to array\");\n    mapMarkers.push(marker);\n    //when click on marker, show and set content on map \n    marker.addListener(\"click\", function(){\n      console.log(\"clicky click\");\n      infowindow.setContent(content);\n      infowindow.open(map, marker);\n        \n    })\n   \n  }\n\n\n\n  //8. place photos on the page \n  function displayPhotoResults(urlID, photoTitle, photoDesc, photoLoc, photoOwner, sizeID){\n\n    //create div to hold all content\n    let resultPane = document.createElement('div');\n    resultPane.className = \"flickr_result\";\n    //create div to hold photo (loaded 2ms later)\n    let resultImg = document.createElement('div');\n    resultImg.className = \"flickr_window\";\n    resultImg.id = urlID; //sets class as id for matching purposes \n    //create container for text\n    let photoContent = document.createElement('div');\n    photoContent.className = \"flickr_content\";\n    //create text divs\n    let contentTitle = document.createElement('p');\n      contentTitle.className = \"photo_title\";\n    let contentDesc = document.createElement('p');\n      contentDesc.className = \"photo_desc\";\n    let contentLoc = document.createElement('p');\n      contentLoc.className = \"photo_location\";\n    let contentOwner = document.createElement('p');\n      contentOwner.className = \"photo_owner\";\n    //create labels for text\n    let textLabelA = document.createElement('label');\n    let textLabelB = document.createElement('label');\n    let textLabelC = document.createElement('label');\n    //place content in container\n    contentTitle.innerHTML = photoTitle;\n    textLabelA.innerHTML = \"Description : \"\n    contentDesc.innerHTML += \" \" + photoDesc;\n    textLabelB.innerHTML = \"Location : \"\n    contentLoc.innerHTML += \" \" + photoLoc;\n    textLabelC.innerHTML = \"Owner : \"\n    contentOwner.innerHTML += \" \" + photoOwner;\n    //add text to content container\n    photoContent.appendChild(contentTitle);\n    photoContent.appendChild(textLabelA);\n    photoContent.appendChild(contentDesc);\n    photoContent.appendChild(textLabelB);\n    photoContent.appendChild(contentLoc);\n    photoContent.appendChild(textLabelC);\n    photoContent.appendChild(contentOwner);\n    //add containers to main div\n    resultPane.appendChild(resultImg);\n    resultPane.appendChild(photoContent);\n    //add div to page\n    resultsWindow.appendChild(resultPane);\n    //call and add photos\n    getPhotoSizes(sizeID);\n  }\n\n  //6b. Pull content from neat objects such as id title, lat, lon/ etc\n  function pullPhotoData(infoResponse){ \n    console.log(\"loading photo info...\" )\n    console.log(infoResponse);\n    //store object properties in values\n    let photoTitle = infoResponse.data.photo.title._content;\n    let photoDesc = infoResponse.data.photo.description._content;\n    let photoOwner = infoResponse.data.photo.owner.username;\n    let photoLoc = infoResponse.data.photo.owner.location;\n    let photoLat = infoResponse.data.photo.location.latitude;\n    let photoLng = infoResponse.data.photo.location.longitude;\n    let sizeID =  infoResponse.data.photo.id;\n    let urlDeck = infoResponse.data.photo.urls.url;\n    let urlID;\n    for(var i= 0; i < urlDeck.length; i++){\n      urlID = urlDeck[i]._content;\n    };\n\n    //put results on page\n    displayPhotoResults(urlID, photoTitle, photoDesc, photoLoc, photoOwner, sizeID);   \n\n    //pass location coordinates to google\n     placeMarker(photoLat,photoLng,photoTitle,photoOwner,urlID); \n  \n  };\n  \n  //7b. Pull urls containing sizes and jpgs. Selects 150x150/ \n  function pullURLS(infoImage){\n    let photoSizes = infoImage.data.sizes;\n    //console.log(\"photoSize of: \" +)\n    //console.log(photoSizes) //select size by label name\n    let img_lgSq = photoSizes.size.find( ({ label }) => label === 'Medium' );\n    let imgSrc = img_lgSq.source; //set src=\" {in variable}\"\n    let urlSrc = img_lgSq.url; // set url in variable to match against \n    //^^ GET VARIABLES //\n    imgThumbnails.push(imgSrc);\n\n\n    //vv CREATE ELEMENTS //\n    let imgWindow = document.createElement(\"img\"); //create img element\n    imgWindow.setAttribute(\"src\", imgSrc) //set src as variable\n    imgWindow.id = urlSrc; //add shared classname (sets url as id);\n    imgWindow.className = \"picture\"\n    // console.log(\"src url:\");\n    // console.log(urlSrc);\n\n    //vv FIND DOM ELEMENT //\n      flickr_windows = document.querySelectorAll(\".flickr_window\");\n      //collect divs in array, loop thru each div, match the id\n    for (let w = 0; w < flickr_windows.length; w++) {\n      const windowDiv= flickr_windows[w].id;\n      if (urlSrc.includes(windowDiv)) {\n       // console.log(\"match found\");\n        //console.log(windowDiv, urlSrc);\n        flickr_windows[w].appendChild(imgWindow);\n      }\n    }\n  };\n  \n  //6a. call API again, now sending photoIDs to flickr\n  function getPhotoInfo(photoID){ \n    // CALL 1: GETS USER INFO ON PHOTOS IN NEATER OBJECTS\n    console.log(\"fetching photo info...\");\n    axios.get(INFO_API_URL_BASE,{ //call the link\n      params:{\n        photo_id: photoID // pass thru your varibales to Flickr's parameters\n      }\n    }).then(function(infoResponse){ //then call this function\n      //console.log(infoResponse);\n      pullPhotoData(infoResponse)\n    }).catch(function (error){ //if get function failed, call this function \n      console.log(\"infoResponse isn't working...\");\n      console.log(error); //show error code in the console\n    });\n  }\n  \n  //7a.  all API again, now reqesuting imgs\n  function getPhotoSizes(sizeID) {\n    ///CALL 2: GETS PHOTO SRC IN VARIOUS SIZES AS JPGS\n    console.log(\"fetching photo sizes...\");\n    axios.get(IMGurl_API_URL_BASE,{ //call the link\n      params:{\n        photo_id: sizeID // pass thru your varibales to Flickr's parameters\n      }\n    }).then(function(infoImage){ //then call this function\n   // console.log(infoImage);\n    pullURLS(infoImage)\n    //setTimeout(pullURLS(infoImage),2000); //(wait 2ms) pass the data to the next function;\n      //so photos load just a hair after thier div containers \n    }).catch(function (error){ //if get function failed, call this function \n    console.log(\"infoImage isn't working...\");\n    console.log(error); //show error code in the console\n    });\n  }\n  \n\n  //5. process the photo ID data recieved from FLICKr\n  function handleQueryResponse(response){\n    console.log(\"processing data...\");\n    //target the array from the data you want to loop through\n    let photoReturn = response.data.photos.photo;\n    //loop through the array of data\n    for (var i=0; i < photoReturn.length; i++){\n      //store specific data in variables\n      let photoID = photoReturn[i].id;\n      //call next function, passing through new array\n      getPhotoInfo(photoID);\n    }\n  };\n\n\n  //4. call FLICKRs.photo.search and pass user values along as Flickrs params\n  function getQueryData(photoQuery, tagsQuery){\n    console.log(\"fetching with GET:\" + photoQuery ,tagsQuery);\n    axios.get(SRCH_API_URL_BASE,{ //call the link\n      params:{\n        text: photoQuery, // pass thru your varibales to Flickr's parameters\n        tags: tagsQuery\n      }\n    }).then(function(response){ //then call this function\n      console.log(\"data retrieved for \" + photoQuery + \" with tags: \" + tagsQuery );\n      console.log(response); //show returned call data in the console\n      handleQueryResponse(response); //pass the data to the next function;\n    }).catch(function (error){ //if get function failed, call this function \n      console.log(\"photo search isn't working...\");\n      console.log(error); //show error code in the console\n    }); //an addtional .then(function(var)) is always executed (optional)\n\n  };\n\n  //3.when button is clicked, run function \n  function makeSearchRequest(event){ //capture user value/calls getUserData()\n    //presents the browser from doing default behavior like refreshing/loading/ etc\n    event.preventDefault()\n    //turn user text into variable\n    const photoQuery = picSearch_query.value;\n    const tagsQuery = tagsSearch_query.value;\n    console.log('value of photo query: ', photoQuery);\n    console.log('value of photo query: ', tagsQuery);\n    //pass variables to next function\n    getQueryData(photoQuery,tagsQuery);\n    //function still works if one value is not entered.\n    resultsWindow.innerHTML =\" \"; // clears any results from page\n    clearOverlays(); //clears any markers from the map\n  };\n\n  //2. When user clickes the button, run this function (capture user values )\n  picSearch_button.addEventListener(\"click\", makeSearchRequest); //when user clicks button,\n  tagsSearch_button.addEventListener(\"click\", makeSearchRequest);// run this function\n\n  ////-----------FLICKR---------------- FLICKR------------------FLICKR-----////\n    ////-----------GOOGLE MAPS---------------- GOOGLE MAPS------------------GOOGLE MAPS-----////\n    // var map;\n    // //var service;\n    // var mapMarkers;\n    // var infowindow = null;\n  \n    function initMap() {\n      console.log(\"init map is here\")\n      mapMarkers= [];\n\n      var circus = {lat:33.813245, lng: -84.362171};\n      map = new google.maps.Map(document.getElementById('map'), {\n        center: circus,\n        zoom: 11\n      });\n  \n    };\n  \n    ////-----------GOOGLE MAPS---------------- GOOGLE MAPS------------------GOOGLE MAPS-----////\n  \n\n  \n window.initMap = initMap;\n})();"],"file":"main.js"}